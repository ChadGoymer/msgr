% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/assert.R
\name{assert_file}
\alias{assert_file}
\alias{assert_dir}
\alias{assert_readable}
\alias{assert_writeable}
\alias{assert_url}
\title{Display an error if a valid file or directory path}
\usage{
assert_file(
  x,
  level = 1,
  msg_level = getOption("msgr.level"),
  msg_types = getOption("msgr.types"),
  log_path = getOption("msgr.log_path")
)

assert_dir(
  x,
  level = 1,
  msg_level = getOption("msgr.level"),
  msg_types = getOption("msgr.types"),
  log_path = getOption("msgr.log_path")
)

assert_readable(
  x,
  level = 1,
  msg_level = getOption("msgr.level"),
  msg_types = getOption("msgr.types"),
  log_path = getOption("msgr.log_path")
)

assert_writeable(
  x,
  level = 1,
  msg_level = getOption("msgr.level"),
  msg_types = getOption("msgr.types"),
  log_path = getOption("msgr.log_path")
)

assert_url(
  x,
  level = 1,
  msg_level = getOption("msgr.level"),
  msg_types = getOption("msgr.types"),
  log_path = getOption("msgr.log_path")
)
}
\arguments{
\item{x}{(any) The variable to check.}

\item{level}{(integer, optional) The level of the message, from 1 to 10.
Default: 1.}

\item{msg_level}{(integer, optional) The maximum level of messages to output.
Default: set in the option \code{"msgr.level"}.}

\item{msg_types}{(character, optional) The type to write or display. Must
either NULL or one or more from "INFO", "WARNING" or "ERROR". Default: set
in the option \code{"msgr.types"}.}

\item{log_path}{(character, optional) The file path to the text log file. If
set to "", then no logs are written. Default: set in the option
\code{"msgr.log_path"}.}
}
\value{
If assertion passes then \code{TRUE} is returned. This allows you to make
multiple assertions separated by \code{&}.
}
\description{
This function calls the \code{\link[=error]{error()}} function to display an error if the
variable's values are not valid file or directory paths.
}
\details{
The following validations can be checked:
\itemize{
\item \code{assert_file()}: 'x' must be an existing file
\item \code{assert_dir()}: 'x' must be an existing directory
\item \code{assert_readable()}: 'x' must be a readable directory or file
\item \code{assert_writeable()}: 'x' must be a writeable directory or file
\item \code{assert_url()}: 'x' must be a valid URL
}
}
\examples{
\dontrun{

# No error
assert_file(system.file("DESCRIPTION", package = "msgr"))
# Error
assert_file("no-such-file.txt")

# No error
assert_dir(R.home())
# Error
assert_dir("no-such-directory")

# No error
assert_readable(R.home())
# Error
assert_readable("no-such-directory")

# No error
assert_writeable(Sys.getenv("HOME"))
# Error
assert_writeable("no-such-directory")

# No error
assert_url("https://www.google.com")
# Error
assert_url("no-such-site")

}

}
